2 + 2
install.packages("caret")
install.packages("tidyverse")
install.packages("tidytext")
install.packages("e1071")
install.packages("rjags")
setwd("~/Documents/github_respositories/DBDA2Eprograms")
N = 500 # Specify the total number of flips, denoted N.
pHeads = 0.5 # Specify underlying probability of heads.
flipSequence = sample( x=c(0,1), prob=c(1-pHeads,pHeads), size=N, replace=TRUE )
r = cumsum( flipSequence ) # Cumulative sum: Number of heads at each step.
n = 1:N                    # Number of flips at each step.
runProp = r / n            # Component by component division.
plot( n , runProp , type="o" , log="x" , col="skyblue" ,
xlim=c(1,N) , ylim=c(0.0,1.0) , cex.axis=1.5 ,
xlab="Flip Number" , ylab="Proportion Heads" , cex.lab=1.5 ,
main="Running Proportion of Heads" , cex.main=1.5 )
abline( h=pHeads , lty="dotted" )
flipLetters = paste( c("T","H")[flipSequence[1:10]+1] , collapse="" )
displayString = paste0( "Flip Sequence = " , flipLetters , "..." )
text( N , .9 , displayString , adj=c(1,0.5) , cex=1.3 )
text( N , .8 , paste("End Proportion =",runProp[N]) , adj=c(1,0.5) , cex=1.3 )
show(HairEyeColor)
EyeHairFreq <- apply(HairEyeColor, c("Eye", "Hair"), sum)
EyeHairFreq <- apply(HairEyeColor, c("Eye", "Hair"), sum)
EyeHairProp <- EyeHairFreq / sum(EyeHairFreq)
show(round(EyeHairProp, 2))
HairFreq <- apply(HairEyeColor, c("Hair"), sum)
HairProp <- apply(HairFreq /  sum(HairFreq))
HairFreq <- apply(HairEyeColor, c("Hair"), sum)
HairProp <- HairFreq /  sum(HairFreq)
show(round(HairProp, 2))
EyeFreq <- apply(HairEyeColor, c("Eye"), sum)
EyeProp <- EyeFreq / sum(EyeFreq)
show(round(EyeProp, 2))
EyeHairProp["Blue",] / EyeProp["Blue"] # conditional prob. Table 4.2
EyeHairProp["Blue",]  # conditional prob. Table 4.2
EyeHairProp["Blue",] / EyeProp["Blue"] # conditional prob. Table 4.2
sum(EyeHairProp["Blue",] / EyeProp["Blue"]) # conditional prob. Table 4.2
EyeHairProp["Blue",] / EyeProp["Blue"] # conditional prob. Table 4.2
EyeHairProp["Brown",] / EyeProp["Brown"]
EyeHairProp["Brown",] / HairProp["Brown"]
EyeHairProp[,"Brown"] / HairProp["Brown"]
# Hair colors given brown eyes
EyeHairProp["Brown",] / EyeProp["Brown"]
# Eye colors given brown hair
EyeHairProp[,"Brown"] / HairProp["Brown"]
N = 500 # Specify the total number of flips, denoted N.
pHeads = 0.8 # Specify underlying probability of heads.
flipSequence = sample( x=c(0,1), prob=c(1-pHeads,pHeads), size=N, replace=TRUE )
r = cumsum( flipSequence ) # Cumulative sum: Number of heads at each step.
n = 1:N                    # Number of flips at each step.
runProp = r / n            # Component by component division.
plot( n , runProp , type="o" , log="x" , col="skyblue" ,
xlim=c(1,N) , ylim=c(0.0,1.0) , cex.axis=1.5 ,
xlab="Flip Number" , ylab="Proportion Heads" , cex.lab=1.5 ,
main="Running Proportion of Heads" , cex.main=1.5 )
abline( h=pHeads , lty="dotted" )
flipLetters = paste( c("T","H")[flipSequence[1:10]+1] , collapse="" )
displayString = paste0( "Flip Sequence = " , flipLetters , "..." )
text( N , .9 , displayString , adj=c(1,0.5) , cex=1.3 )
text( N , .8 , paste("End Proportion =",runProp[N]) , adj=c(1,0.5) , cex=1.3 )
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
source('~/Documents/github_respositories/DBDA2Eprograms/Exercise 4_2.R')
